unit uAnimalController;

interface

uses
  uAnimalModel;

type
  TClienteController = class
    public
      constructor Create;
      procedure CarregarAnimal(Animal : TAnimal; Id : Integer);
      procedure Pesquisar(Nome : string);
      function Inserir(Animal : TAnimal; var sErro : string) : Boolean;
      function Alterar(Animal : TAnimal; var sErro : string) : Boolean;
      function Excluir(Id : Integer; var sErro : string) : Boolean;
  end;

implementation

uses
  uDmAnimal;

{ TClienteController }

function TClienteController.Alterar(Animal: TAnimal;
  var sErro: string): Boolean;
begin
  Result := DmAnimal.Inserir(Animal, sErro);
end;

procedure TClienteController.CarregarAnimal(Animal: TAnimal; Id: Integer);
begin
  DmAnimal.CarregarAnimal(Animal,Id);
end;

constructor TClienteController.Create;
begin
  DmAnimal := TDmAnimal.Create(nil);

end;

function TClienteController.Excluir(Id: Integer; var sErro: string): Boolean;
begin
  Result := DmAnimal.Excluir(Id, sErro);
end;

function TClienteController.Inserir(Animal: TAnimal;
  var sErro: string): Boolean;
begin
  Result := DmAnimal.Inserir(Animal, sErro);
end;

procedure TClienteController.Pesquisar(Nome: string);
begin
  DmAnimal.Pesquisar(Nome);
end;

end.
